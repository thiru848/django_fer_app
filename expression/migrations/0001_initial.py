# Generated by Django 3.2.13 on 2022-05-18 14:01

from django.db import migrations, models
import django.utils.timezone
import expression.storage
import expression.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('artist', models.TextField()),
                ('image', models.ImageField(storage=expression.storage.OverWriteStorage(), upload_to='img/')),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='records/', validators=[expression.validators.validate_file_extension])),
                ('audio_link', models.CharField(blank=True, max_length=200, null=True)),
                ('duration', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_name', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff Status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('is_doctor', models.BooleanField(default=False, help_text='Qualifies the user as either Doctor (True) or Patient (False)', verbose_name='Is_Doctor Status')),
                ('phone', models.CharField(max_length=10)),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(max_length=6)),
                ('profile', models.ImageField(storage=expression.storage.OverWriteStorage(), upload_to='user/profile/')),
                ('group', models.CharField(max_length=5)),
                ('address', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=25)),
                ('state', models.CharField(max_length=25)),
                ('pincode', models.CharField(max_length=6)),
                ('last_login', models.DateTimeField(blank=True, help_text='Last login time of this account', null=True, verbose_name='Last Login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Time at Creation of this account', verbose_name='Date Joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
